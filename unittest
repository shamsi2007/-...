import unittest
from geometry_library import Circle, Triangle, ShapeFactory

class TestGeometryLibrary(unittest.TestCase):
    def test_circle_area(self):
        circle = Circle(5)
        expected = math.pi * 25
        actual = circle.calculate_area()
        self.assertAlmostEqual(expected, actual, places=4)
    
    def test_triangle_area(self):
        triangle = Triangle(3, 4, 5)
        expected = 6
        actual = triangle.calculate_area()
        self.assertAlmostEqual(expected, actual, places=4)
    
    def test_right_triangle(self):
        triangle = Triangle(3, 4, 5)
        self.assertTrue(triangle.is_right_triangle())
    
    def test_shape_factory(self):
        circle = Circle(5)
        triangle = Triangle(3, 4, 5)
        
        circle_area = ShapeFactory.calculate_area(circle)
        triangle_area = ShapeFactory.calculate_area(triangle)
        
        self.assertAlmostEqual(math.pi * 25, circle_area, places=4)
        self.assertAlmostEqual(6, triangle_area, places=4)

if __name__ == '__main__':
    unittest.main()
